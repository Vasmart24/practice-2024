import { useState } from "react";
import GameScreen from "./screens/GameScreen/GameScreen.jsx";
import Header from "./components/Header/Header.jsx";
import Button from "./components/Button/Button.jsx";
import { Dropdown, Modal } from "antd";
import "./Game.css";

const modalItems = [
  {
    label: "–Ø —Ç–µ–±—è –ø–æ–Ω—è–ª",
    key: "0",
  },
];

const items = [
  {
    label: "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ",
    key: "1",
  },
  {
    label: "–í—ã–ª–∞–∑–∫–∞",
    key: "2",
    children: [
      {
        label: "–í—ã–∂–∏–≤—à–∏–µ",
        key: "6",
      },
      {
        label: "–°—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª—ã",
        key: "7",
      },
      {
        label: "–û—Ä—É–∂–∏–µ",
        key: "8",
      },
      {
        label: "–ü—Ä–∏–ø–∞—Å—ã",
        key: "9",
      },
    ],
  },
  {
    label: "–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ",
    key: "3",
  },
  {
    label: "–ú–µ–Ω—é",
    key: "4",
  },
  {
    label: "–í–ª—é–±–∏—Ç—å—Å—è",
    key: "5",
  },
];

// –ß—Ç–æ–±—ã –≤ —Å–ª—É—á–∞–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç—Ä–æ–∫ –º–µ–Ω—è—Ç—å –∏—Ö —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ
const screenStates = {
  start: "start",
  resources: "resources",
  search: "search",
};

export default function Game() {
  const { start, resources, search } = screenStates;
  const [screen, setScreen] = useState(start);
  const [isModalOpen, setIsModalOpen] = useState(true);

  // const {
  //   token: { colorBgLayout, colorTextTertiary },
  // } = theme.useToken();

  return (
    <div className="game-container">
      <Header />
      <Dropdown
        menu={{
          items,
          onClick: ({ keyPath }) => {
            const parentOptionKey = keyPath[1];
            if (parentOptionKey === "2") {
              setScreen(resources);
            }
          },
        }}
        trigger={["contextMenu"]}
      >
        <div>
          <GameScreen active={screen} setScreen={setScreen} />
        </div>
      </Dropdown>
      <Button onClick={() => setScreen(start)}>start screen</Button>
      <Button onClick={() => setScreen(resources)}>resources screen</Button>
      <Button onClick={() => setScreen(search)}>search screen</Button>
      <Dropdown
        menu={{
          items: modalItems,
          onClick: ({ key }) => {
            if (key === "0") {
              setIsModalOpen(false);
            }
          },
        }}
        trigger={["contextMenu"]}
      >
        <div>
          <Modal title={"üêÅ"} open={isModalOpen} footer={null} closable={false}>
            –ò—Å–ø–æ–ª—å–∑—É–π –ü–ö–ú –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∏–≥—Ä–æ–π
          </Modal>
        </div>
      </Dropdown>
    </div>
  );
}
